#!/usr/bin/env ruby

require 'trollop'

require File.join(File.expand_path(File.dirname(__FILE__)), '..', 'lib', 'creosote')

SUB_COMMANDS = %w(package pkg)
SUB_COMMANDS_PKG = %w(available install)
#global_opts = Trollop::options do
#  banner "Creosote - Scientific Math for Ruby"
#  opt :version, "Creosote Version"
#  stop_on SUB_COMMANDS
#end

banner = <<BANNER
creosote helps to install package dependencies of various mathematics Rubygem C extensions.

Usage:
          creosote pkg|package available [options]
where [options] are:

          creosote pkg|package install [options] [package]
where [options] are:
  and [package] is:

          creosote pkg|package installed [options] [package]
where [options] are:
  and [package] is:
BANNER

if ARGV.empty? or ARGV[0].start_with? '--'
  puts banner
  exit 1
end

cmd = ARGV.shift  # get the subcommand
if cmd == "pkg" || cmd == "package"
  cmd2 = ARGV.shift
  case cmd2
  when "available"
    cmd_opts = Trollop::options do
      opt :latest, "just latest release"
    end
    # It is ok if this returns nil; package name is optional for 'available'
    package_name = ARGV.shift
    Creosote::Package.print_available(package_name, cmd_opts)
  when "install"
    cmd_opts = Trollop::options do
      opt :ver, "package version", :short => '-v', :type => :string
      opt :default, "install this as the default version"
    end
    raise Creosote::Package::BadInstallArgs if ARGV.empty?
    package_name = ARGV.shift
    Creosote::Package.install(package_name, cmd_opts)
  when "installed"
    raise Creosote::Package::BadInstallArgs if ARGV.empty?
    package_name = ARGV.shift
    Creosote::Package.installed(package_name)
  else
    puts banner
    exit 1
  end
else
  puts banner
  exit 1
end
